/* Now add a member function named distanceTo() that takes another Point2d as a parameter, 
and calculates the distance between them. Given two points (x1, y1) and (x2, y2), the distance 
between them can be calculated using the formula std::sqrt((x1 - x2)*(x1 - x2) + (y1 - y2)*(y1 - y2)). 
The std::sqrt function lives in header cmath.
*/


#include <cmath>
#include <iostream>

class Point2d
{
private:
    double m_x{0.0};
    double m_y{0.0};

public:
    Point2d() = default;

    Point2d(double x, double y)     //initializes m_x and m_y to whatever is passed in
        : m_x { x }, m_y { y }
    {
    }

    void print() // has a Foo parameter
    {
        std::cout << "Point2d(" << m_x << ", " << m_y << ")" << "\n";
    }

    double distanceTo(Point2d p)
    {
        return std::sqrt((m_x - p.m_x)*(m_x - p.m_x) + (m_y - p.m_y)*(m_y - p.m_y));
    }

};

int main()
{
    Point2d first{};
    Point2d second{ 3.0, 4.0 };

    first.print();
    second.print();

    std::cout << "Distance between two points: " << first.distanceTo(second) << '\n';

    return 0;
}
